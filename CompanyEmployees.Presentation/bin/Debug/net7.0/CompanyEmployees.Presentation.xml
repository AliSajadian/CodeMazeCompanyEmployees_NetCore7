<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CompanyEmployees.Presentation</name>
    </assembly>
    <members>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.GetCompanies">
            <summary> 
            Gets the list of all companies 
            </summary> 
            <returns>The companies list</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.GetCompanyCollection(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary> 
            Gets the list of a collection of companies 
            </summary> 
            <returns>The companies collection</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.GetCompany(System.Guid)">
            <summary> 
            Gets the specified company 
            </summary> 
            <returns>The company</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.CreateCompany(Shared.DTO.CompanyForCreationDto)">
            <summary> 
            Creates a newly created company 
            </summary> 
            <param name="company"></param>
            <returns>A newly created company</returns> 
            <response code="201">Returns the newly created item</response> 
            <response code="400">If the item is null</response> 
            <response code="422">If the model is invalid</response> 
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.CreateCompanyCollection(System.Collections.Generic.IEnumerable{Shared.DTO.CompanyForCreationDto})">
            <summary> 
            Creates a collection of created companies 
            </summary> 
            <param name="companyCollection"></param>
            <returns>The collection of created companies</returns> 
            <response code="201">Returns collection of created item</response> 
            <response code="400">If the item is null</response> 
            <response code="422">If the model is invalid</response> 
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.DeleteCompany(System.Guid)">
            <summary> 
            Delete the specified company 
            </summary> 
            <param name="id"></param>
            <returns>Nothing</returns> 
            <response code="200">Nothing</response> 
            <response code="400">If the id is null</response> 
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.UpdateCompany(System.Guid,Shared.DTO.CompanyForUpdateDto)">
            <summary> 
            Updates a company 
            </summary> 
            <param name="id"></param>
            <param name="company"></param>
            <returns>An updated company</returns> 
            <response code="200">Returns the updated item</response> 
            <response code="400">If the item is null</response> 
            <response code="422">If the model is invalid</response> 
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesController.GetCompaniesOptions">
            <summary> 
            Gets the list of all options 
            </summary> 
            <returns>the list of all options</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.CompaniesV2Controller.GetCompanies">
            <summary> 
            Gets the list of all companies 
            </summary> 
            <returns>The companies list</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.GetEmployeesForCompany(System.Guid,Shared.RequestFeatures.EmployeeParameters)">
            <summary> 
            Gets the list of employees for specified company 
            </summary> 
            <returns>the list of employees for specified company</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.GetEmployeeForCompany(System.Guid,System.Guid)">
            <summary> 
            Gets an employee for specified company 
            </summary> 
            <returns>An employee for specified company</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.CreateEmployeeForCompany(System.Guid,Shared.DTO.EmployeeForCreationDto)">
            <summary> 
            Create an employee for specified company 
            </summary> 
            <returns>An created employee for specified company</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.DeleteEmployeeForCompany(System.Guid,System.Guid)">
            <summary> 
            Delete an employee for specified company 
            </summary> 
            <returns>Nothing</returns>
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.UpdateEmployeeForCompany(System.Guid,System.Guid,Shared.DTO.EmployeeForUpdateDto)">
            <summary> 
            Updates a employee 
            </summary> 
            <param name="companyId"></param>
            <param name="id"></param>
            <param name="employee"></param>
            <returns>An updated employee</returns> 
            <response code="200">Returns the updated item</response> 
            <response code="400">If the item is null</response> 
            <response code="422">If the model is invalid</response> 
        </member>
        <member name="M:CompanyEmployees.Presentation.Controllers.EmployeesController.PartiallyUpdateEmployeeForCompany(System.Guid,System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Shared.DTO.EmployeeForUpdateDto})">
            <summary> 
            Updates a employee 
            </summary> 
            <param name="companyId"></param>
            <param name="id"></param>
            <param name="patchDoc"></param>
            <returns>An updated employee</returns> 
            <response code="200">Returns the updated item</response> 
            <response code="400">If the item is null</response> 
            <response code="422">If the model is invalid</response> 
        </member>
    </members>
</doc>
